N = int(input())
N -= 1  # 0-indexedにする（例：最初の回文数を0番目とする）

d = 1  # 桁数の初期値を1に設定
while True:
    # その桁数の回文数の「上半分」の桁数
    x = (d + 1) // 2
    # その桁数で作れる回文数の個数は9 * 10**(x-1)
    count = 9 * 10 ** (x - 1)
    # Nがその桁数に収まるなら、dが求める回文数の桁数
    if N < count:
        break
    # 収まらない場合は、Nからその個数を引いて次の桁数へ
    N -= count
    d += 1

# 求める回文数の上位桁の桁数
x = (d + 1) // 2
# その桁数で最小の上位桁の値（例：100... など）
start = 10 ** (x - 1)
# N番目の回文数の上位桁の数値
num = start + N

# 文字列に変換して回文数を作る
s = str(num)
if d % 2 == 0:
    # 桁数が偶数なら、逆順にしてそのまま繋ぐ
    palindrome = s + s[::-1]
else:
    # 桁数が奇数なら、中央の桁を重複させないように逆順の1文字目を除いて繋ぐ
    palindrome = s + s[-2::-1]

# 出力：求める回文数
print(palindrome)
